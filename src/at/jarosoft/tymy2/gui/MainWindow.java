/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package at.jarosoft.tymy2.gui;

import at.jarosoft.tymy2.controller.TymyController;
import at.jarosoft.tymy2.exception.CouldNotSaveSettingsException;
import at.jarosoft.tymy2.exception.CouldNotSaveTimeEntryException;
import at.jarosoft.tymy2.model.ActivityWrapper;
import at.jarosoft.tymy2.model.ComboBoxable;
import at.jarosoft.tymy2.model.ProjectWrapper;
import at.jarosoft.tymy2.model.Settings;
import java.awt.AWTKeyStroke;
import java.awt.Color;
import java.awt.KeyboardFocusManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.InputMap;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.KeyStroke;
import javax.swing.SwingUtilities;
import static javax.swing.SwingUtilities.updateComponentTreeUI;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author mj
 */
public class MainWindow extends javax.swing.JFrame {

    private boolean measureButtonEnabled = true;
    private Timer flashWindowTimer = new Timer(1000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            toFront();
        }
    });

    private final int TAB_INDEX_CONFIG = 0;
    private final int TAB_INDEX_MEASURE = 1;
    private final int TAB_INDEX_SUBMIT = 2;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpMain = new javax.swing.JTabbedPane();
        tabConfig = new javax.swing.JPanel();
        pnlConfig = new javax.swing.JPanel();
        lblRedmineUrl = new javax.swing.JLabel();
        txtRedmineUrl = new javax.swing.JTextField();
        lblApiKey = new javax.swing.JLabel();
        txtApiKey = new javax.swing.JTextField();
        lblSettingsWillBeSaved = new javax.swing.JLabel();
        tabMeasure = new javax.swing.JPanel();
        pnlMeasure = new javax.swing.JPanel();
        btnMeasure = new javax.swing.JToggleButton();
        tabCheckSubmit = new javax.swing.JPanel();
        pnlCheckSubmit = new javax.swing.JPanel();
        lblProject = new javax.swing.JLabel();
        cbProject = new javax.swing.JComboBox<>();
        lblTicket = new javax.swing.JLabel();
        txtTicket = new javax.swing.JTextField();
        lblComment = new javax.swing.JLabel();
        txtComment = new javax.swing.JTextField();
        lblHours = new javax.swing.JLabel();
        txtHours = new javax.swing.JSpinner();
        lblActivity = new javax.swing.JLabel();
        cbActivity = new javax.swing.JComboBox<>();
        btnSubmit = new javax.swing.JButton();
        btnContinue = new javax.swing.JButton();
        btnUndo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lblStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TyMy");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/at/jarosoft/tymy2/gui/icon/stopwatch_white.png")).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tpMain.setName("tabs"); // NOI18N

        tabConfig.setName(""); // NOI18N

        pnlConfig.setName("tabConfig"); // NOI18N

        lblRedmineUrl.setLabelFor(txtRedmineUrl);
        lblRedmineUrl.setText("Redmine URL");
        lblRedmineUrl.setName(""); // NOI18N

        txtRedmineUrl.setName("txtRedmineUrl"); // NOI18N
        txtRedmineUrl.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRedmineUrlFocusLost(evt);
            }
        });
        txtRedmineUrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRedmineUrlActionPerformed(evt);
            }
        });

        lblApiKey.setLabelFor(txtApiKey);
        lblApiKey.setText("Redmine API Key");

        txtApiKey.setName("txtRedmineApiKey"); // NOI18N
        txtApiKey.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtApiKeyFocusLost(evt);
            }
        });

        lblSettingsWillBeSaved.setText("Settings will be saved on exit.");

        javax.swing.GroupLayout pnlConfigLayout = new javax.swing.GroupLayout(pnlConfig);
        pnlConfig.setLayout(pnlConfigLayout);
        pnlConfigLayout.setHorizontalGroup(
            pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfigLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlConfigLayout.createSequentialGroup()
                        .addComponent(lblSettingsWillBeSaved)
                        .addGap(0, 427, Short.MAX_VALUE))
                    .addGroup(pnlConfigLayout.createSequentialGroup()
                        .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblApiKey)
                            .addComponent(lblRedmineUrl))
                        .addGap(18, 18, 18)
                        .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRedmineUrl)
                            .addComponent(txtApiKey))))
                .addContainerGap())
        );
        pnlConfigLayout.setVerticalGroup(
            pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfigLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRedmineUrl)
                    .addComponent(txtRedmineUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApiKey)
                    .addComponent(txtApiKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 309, Short.MAX_VALUE)
                .addComponent(lblSettingsWillBeSaved)
                .addContainerGap())
        );

        javax.swing.GroupLayout tabConfigLayout = new javax.swing.GroupLayout(tabConfig);
        tabConfig.setLayout(tabConfigLayout);
        tabConfigLayout.setHorizontalGroup(
            tabConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlConfig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tabConfigLayout.setVerticalGroup(
            tabConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlConfig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tpMain.addTab("Config", tabConfig);

        pnlMeasure.setName("tabTime"); // NOI18N

        btnMeasure.setText("Measure");
        btnMeasure.setName("btnMeasure"); // NOI18N
        btnMeasure.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnMeasureItemStateChanged(evt);
            }
        });
        btnMeasure.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                btnMeasureStateChanged(evt);
            }
        });
        btnMeasure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMeasureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMeasureLayout = new javax.swing.GroupLayout(pnlMeasure);
        pnlMeasure.setLayout(pnlMeasureLayout);
        pnlMeasureLayout.setHorizontalGroup(
            pnlMeasureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMeasureLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(btnMeasure, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE))
        );
        pnlMeasureLayout.setVerticalGroup(
            pnlMeasureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnMeasure, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout tabMeasureLayout = new javax.swing.GroupLayout(tabMeasure);
        tabMeasure.setLayout(tabMeasureLayout);
        tabMeasureLayout.setHorizontalGroup(
            tabMeasureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMeasure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tabMeasureLayout.setVerticalGroup(
            tabMeasureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMeasure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tpMain.addTab("Measure", null, tabMeasure, "");

        pnlCheckSubmit.setName("tabSubmit"); // NOI18N

        lblProject.setDisplayedMnemonic('p');
        lblProject.setText("Project");

        lblTicket.setDisplayedMnemonic('t');
        lblTicket.setText("Ticket");

        lblComment.setDisplayedMnemonic('m');
        lblComment.setText("Comment");

        txtComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCommentActionPerformed(evt);
            }
        });

        lblHours.setDisplayedMnemonic('e');
        lblHours.setText("Hours spent");

        txtHours.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 24.0d, 0.25d));

        lblActivity.setDisplayedMnemonic('y');
        lblActivity.setText("Activity");

        btnSubmit.setMnemonic('s');
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnContinue.setMnemonic('c');
        btnContinue.setText("Continue");
        btnContinue.setEnabled(false);
        btnContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinueActionPerformed(evt);
            }
        });

        btnUndo.setMnemonic('u');
        btnUndo.setText("Undo last Entry");
        btnUndo.setEnabled(false);
        btnUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUndoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCheckSubmitLayout = new javax.swing.GroupLayout(pnlCheckSubmit);
        pnlCheckSubmit.setLayout(pnlCheckSubmitLayout);
        pnlCheckSubmitLayout.setHorizontalGroup(
            pnlCheckSubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCheckSubmitLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCheckSubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnContinue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCheckSubmitLayout.createSequentialGroup()
                        .addGroup(pnlCheckSubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblComment)
                            .addComponent(lblHours)
                            .addComponent(lblTicket)
                            .addComponent(lblProject)
                            .addComponent(lblActivity))
                        .addGap(18, 18, 18)
                        .addGroup(pnlCheckSubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbProject, 0, 484, Short.MAX_VALUE)
                            .addComponent(txtTicket)
                            .addComponent(txtComment)
                            .addGroup(pnlCheckSubmitLayout.createSequentialGroup()
                                .addComponent(txtHours, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cbActivity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btnSubmit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUndo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlCheckSubmitLayout.setVerticalGroup(
            pnlCheckSubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCheckSubmitLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlCheckSubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProject)
                    .addComponent(cbProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCheckSubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTicket)
                    .addComponent(txtTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCheckSubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblComment)
                    .addComponent(txtComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCheckSubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHours)
                    .addComponent(txtHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCheckSubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblActivity)
                    .addComponent(cbActivity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnContinue, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUndo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout tabCheckSubmitLayout = new javax.swing.GroupLayout(tabCheckSubmit);
        tabCheckSubmit.setLayout(tabCheckSubmitLayout);
        tabCheckSubmitLayout.setHorizontalGroup(
            tabCheckSubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCheckSubmitLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCheckSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabCheckSubmitLayout.setVerticalGroup(
            tabCheckSubmitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCheckSubmitLayout.createSequentialGroup()
                .addComponent(pnlCheckSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );

        tpMain.addTab("Check & Submit", tabCheckSubmit);

        jScrollPane1.setHorizontalScrollBar(null);

        lblStatus.setText("Ready");
        lblStatus.setOpaque(true);
        jScrollPane1.setViewportView(lblStatus);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpMain)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tpMain)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMeasureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMeasureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMeasureActionPerformed

    private void txtRedmineUrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRedmineUrlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRedmineUrlActionPerformed

    private void txtCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCommentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCommentActionPerformed

    private void selectItemWithId(JComboBox comboBox, int id) {
        ComboBoxModel model = comboBox.getModel();
        for (int i = 0; i < model.getSize(); ++i) {
            ComboBoxable wrapper = (ComboBoxable) model.getElementAt(i);
            if (wrapper.getId() == id) {
                comboBox.setSelectedItem(wrapper);
                break;
            }
        }
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        this.tpMain.setSelectedIndex(this.TAB_INDEX_MEASURE);
        setupTabTraversalKeys(tpMain);

        this.lblStatus.setText("Getting projects from redmine...");
        List<ProjectWrapper> projects;
        projects = TymyController.getProjectsWrapped();
        ComboBoxModel<ComboBoxable> projectsModel;
        final ComboBoxable[] projectsArray = (ComboBoxable[]) projects.toArray(new ComboBoxable[1]);
        projectsModel = new DefaultComboBoxModel<>(projectsArray);
        this.cbProject.setModel(projectsModel);

        this.lblStatus.setText("Getting activities from redmine...");
        List<ActivityWrapper> activities;
        activities = TymyController.getActivitiesWrapped();
        ComboBoxModel<ComboBoxable> activitiesModel;
        final ComboBoxable[] activitiesArray = (ComboBoxable[]) activities.toArray(new ComboBoxable[1]);
        activitiesModel = new DefaultComboBoxModel<>(activitiesArray);
        this.cbActivity.setModel(activitiesModel);

        this.loadSettings();

        this.lblStatus.setText("Ready.");
        this.btnMeasure.requestFocus();

    }//GEN-LAST:event_formWindowOpened

    private void loadSettings() {
        this.lblStatus.setText("Loading settings...");

        Settings settings = TymyController.loadSettings();
        this.txtRedmineUrl.setText(settings.redmineUrl);
        this.txtApiKey.setText(settings.apiKey);
        selectItemWithId(cbProject, settings.lastProjectId);
        this.txtComment.setText(settings.lastComment);
        this.txtTicket.setText(settings.lastTicketId);
        this.txtHours.setValue(settings.lastHours);
        selectItemWithId(cbActivity, settings.lastActivityId);
        Logger.getLogger(TymyController.class.getName()).log(Level.INFO, "Settings loaded.");
        Logger.getLogger(TymyController.class.getName()).log(Level.INFO, settings.lastComment);
    }

    private void saveSettings() {
        try {
            this.lblStatus.setText("Saving settings...");
            TymyController.saveSettings(this.txtRedmineUrl.getText(),
                    this.txtApiKey.getText(),
                    ((ProjectWrapper) (this.cbProject.getSelectedItem())).getProject().getId(),
                    this.txtTicket.getText(),
                    this.txtComment.getText(),
                    (Double) this.txtHours.getValue(),
                    ((ActivityWrapper) (this.cbActivity.getSelectedItem())).getActivity().getId()
            );
            this.lblStatus.setText("Ready.");
            this.lblStatus.setBackground(UIManager.getColor("Panel.background"));
            this.lblStatus.setForeground(Color.black);
            Logger.getLogger(TymyController.class.getName()).log(Level.INFO, "Settings saved.");
        } catch (CouldNotSaveSettingsException e) {
            JOptionPane.showMessageDialog(this, String.format("Could not save settings: %s", e.getMessage()), "Tymy", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(TymyController.class.getName()).log(Level.SEVERE, null, String.format("Could not save settings: %s", e.getMessage()));
        }
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.saveSettings();
    }//GEN-LAST:event_formWindowClosing

    private void txtRedmineUrlFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRedmineUrlFocusLost
        this.saveSettings();
    }//GEN-LAST:event_txtRedmineUrlFocusLost

    private void txtApiKeyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApiKeyFocusLost
        this.saveSettings();
    }//GEN-LAST:event_txtApiKeyFocusLost

    private void btnMeasureStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_btnMeasureStateChanged

    }//GEN-LAST:event_btnMeasureStateChanged

    private void btnMeasureItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnMeasureItemStateChanged

        if (this.measureButtonEnabled) {
            if (evt.getStateChange() == ItemEvent.SELECTED) {
                TymyController.startMeasurement();
                this.btnSubmit.setEnabled(false);
                this.btnContinue.setEnabled(false);
                this.btnUndo.setEnabled(false);
                this.lblStatus.setText("Measurement started.");
                this.lblStatus.setBackground(UIManager.getColor("Panel.background"));
                this.lblStatus.setForeground(Color.black);
                this.flashWindowTimer.stop();
            } else if (evt.getStateChange() == ItemEvent.DESELECTED) {
                TymyController.stopMeasurement();
                this.btnSubmit.setEnabled(true);
                this.btnContinue.setEnabled(true);
                this.btnUndo.setEnabled(TymyController.canUndo());
                long seconds = TymyController.getMeasurementSeconds();
                this.lblStatus.setText(String.format("Measurement stopped after %s seconds.", seconds));
                this.lblStatus.setBackground(UIManager.getColor("Panel.background"));
                this.lblStatus.setForeground(Color.black);
                this.txtHours.setValue(TymyController.secondsToIndustrialHours(seconds));
                this.tpMain.setSelectedIndex(this.TAB_INDEX_SUBMIT);
                this.flashWindowTimer.start();
            }
        }
    }//GEN-LAST:event_btnMeasureItemStateChanged

    private void btnContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinueActionPerformed

        long seconds = TymyController.getMeasurementSeconds();
        TymyController.continueMeasurement();
        this.measureButtonEnabled = false;
        this.btnMeasure.setSelected(true);
        this.measureButtonEnabled = true;
        this.btnSubmit.setEnabled(false);
        this.btnContinue.setEnabled(false);
        this.btnUndo.setEnabled(false);
        this.lblStatus.setText(String.format("Continuing measurement after %s seconds...", seconds));
        this.lblStatus.setBackground(UIManager.getColor("Panel.background"));
        this.lblStatus.setForeground(Color.black);
        this.flashWindowTimer.stop();
        this.tpMain.setSelectedIndex(this.TAB_INDEX_MEASURE);
    }//GEN-LAST:event_btnContinueActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        this.lblStatus.setText("Submitting data to redmine...");
        this.lblStatus.setBackground(UIManager.getColor("Panel.background"));
        this.lblStatus.setForeground(Color.black);
        this.lblStatus.invalidate();
        try {
            String submittedMeasurementString = TymyController.submitMeasurement((ProjectWrapper) (cbProject.getSelectedItem()), txtTicket.getText(), txtComment.getText(), ((Double) (txtHours.getValue())), (ActivityWrapper) (cbActivity.getSelectedItem()));
            this.btnUndo.setEnabled(true);
            this.lblStatus.setText(String.format("%s hours submitted: '%s'", txtHours.getValue().toString(), txtComment.getText()));
            this.lblStatus.setText(String.format("Entry submitted: %s", submittedMeasurementString));
            this.lblStatus.setBackground(new Color(0, 128, 0));
            this.lblStatus.setForeground(Color.white);
            this.tpMain.setSelectedIndex(this.TAB_INDEX_MEASURE);
        } catch (CouldNotSaveTimeEntryException ex) {
            this.lblStatus.setText("Error saving time entry.");
            this.lblStatus.setBackground(Color.red);
            this.lblStatus.setForeground(Color.white);
        }

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUndoActionPerformed
        this.lblStatus.setText("Reverting last entry in redmine...");
        try {
            String undoneMeasurementString = TymyController.undoLastMeasurement();
            this.lblStatus.setText(String.format("Entry undone: %s", undoneMeasurementString));
            this.lblStatus.setBackground(new Color(0, 0, 128));
            this.lblStatus.setForeground(Color.white);
            this.btnUndo.setEnabled(false);
        } catch (CouldNotSaveTimeEntryException ex) {
            this.lblStatus.setText("Error undoing last time entry.");
            this.lblStatus.setBackground(Color.red);
            this.lblStatus.setForeground(Color.white);
        }
    }//GEN-LAST:event_btnUndoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    private static void setupTabTraversalKeys(JTabbedPane tabbedPane) {
        KeyStroke ctrlTab = KeyStroke.getKeyStroke("ctrl TAB");
        KeyStroke ctrlShiftTab = KeyStroke.getKeyStroke("ctrl shift TAB");

        // Remove ctrl-tab from normal focus traversal
        Set<AWTKeyStroke> forwardKeys = new HashSet<>(tabbedPane.getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        forwardKeys.remove(ctrlTab);
        tabbedPane.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, forwardKeys);

        // Remove ctrl-shift-tab from normal focus traversal
        Set<AWTKeyStroke> backwardKeys = new HashSet<>(tabbedPane.getFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS));
        backwardKeys.remove(ctrlShiftTab);
        tabbedPane.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, backwardKeys);

        // Add keys to the tab's input map
        InputMap inputMap = tabbedPane.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(ctrlTab, "navigateNext");
        inputMap.put(ctrlShiftTab, "navigatePrevious");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnContinue;
    private javax.swing.JToggleButton btnMeasure;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnUndo;
    private javax.swing.JComboBox<ComboBoxable> cbActivity;
    private javax.swing.JComboBox<ComboBoxable> cbProject;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblActivity;
    private javax.swing.JLabel lblApiKey;
    private javax.swing.JLabel lblComment;
    private javax.swing.JLabel lblHours;
    private javax.swing.JLabel lblProject;
    private javax.swing.JLabel lblRedmineUrl;
    private javax.swing.JLabel lblSettingsWillBeSaved;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTicket;
    private javax.swing.JPanel pnlCheckSubmit;
    private javax.swing.JPanel pnlConfig;
    private javax.swing.JPanel pnlMeasure;
    private javax.swing.JPanel tabCheckSubmit;
    private javax.swing.JPanel tabConfig;
    private javax.swing.JPanel tabMeasure;
    private javax.swing.JTabbedPane tpMain;
    private javax.swing.JTextField txtApiKey;
    private javax.swing.JTextField txtComment;
    private javax.swing.JSpinner txtHours;
    private javax.swing.JTextField txtRedmineUrl;
    private javax.swing.JTextField txtTicket;
    // End of variables declaration//GEN-END:variables
}
